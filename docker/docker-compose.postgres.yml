services:
  jbst-server:
    image: ghcr.io/tech1-agency/jbst-iam-server:1.7
    restart: unless-stopped
    container_name: jbst-server
    networks:
      - jbst-network
    ports:
      - "3002:3002"
    depends_on:
      jbst-postgres:
        condition: service_healthy
    links:
      - jbst-postgres
    environment:
      - PORT=3002
      - SPRING_BOOT_PROFILE=postgres
      - CONFIG_LOCATIONS=classpath:application.yml,classpath:application-dev.yml,classpath:application-postgres.yml,file:/application-docker-postgres.yml
      - JASYPT_PASSWORD=JJJJBSTGH
      - JVM_ARGUMENTS=-Xmx5g --add-opens=java.base/java.time=ALL-UNNAMED
    volumes:
      - ./application-docker-postgres.yml:/application-docker-postgres.yml

  jbst-postgres:
    image: postgres:14.3
    restart: always
    container_name: jbst-postgres
    ports:
      - "3004:5432"
    networks:
      - jbst-network
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - jbst-postgres-data:/var/lib/postgresql/data
      - ./init-postgres-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  jbst-network:
    name: jbst-network
    driver: bridge

volumes:
  jbst-postgres-data:
