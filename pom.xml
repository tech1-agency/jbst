<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.tech1.framework</groupId>
    <artifactId>tech1-framework</artifactId>
    <packaging>pom</packaging>
    <version>2.5-SNAPSHOT</version>

    <name>${project.artifactId}</name>
    <description>Tech1 Framework</description>
    <url>https://github.com/tech1-io/tech1-framework</url>
    <inceptionYear>2022</inceptionYear>
    <organization>
        <name>Tech1</name>
        <url>https://github.com/tech1-io</url>
    </organization>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Yurii Luchkiv</name>
            <email>yyluchkiv@gmail.com</email>
            <organization>Tech1</organization>
            <organizationUrl>https://tech1.io</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:ssh://git@github.com/tech1-io/tech1-framework.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/tech1-io/tech1-framework.git</developerConnection>
        <url>https://github.com/tech1-io/tech1-framework</url>
    </scm>

    <modules>
        <!-- JARs -->
        <module>tech1-framework-domain</module>
        <module>tech1-framework-utilities</module>
        <module>tech1-framework-properties</module>
        <module>tech1-framework-configurations</module>
        <module>tech1-framework-emails</module>
        <module>tech1-framework-hardware</module>
        <module>tech1-framework-incidents</module>
        <module>tech1-framework-b2b-base-security-jwt</module>
        <module>tech1-framework-b2b-base-security-jwt-websockets</module>
        <module>tech1-framework-b2b-mongodb-security-jwt</module>
        <module>tech1-framework-b2b-postgres-security-jwt</module>
        <!-- Servers -->
        <module>tech1-framework-b2b-mongodb-server</module>
        <module>tech1-framework-b2b-postgres-server</module>
    </modules>

    <properties>
        <!-- environment -->
        <version.java>17</version.java>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.delombok.output>${project.build.directory}/delombok</project.delombok.output>
        <!-- dependencies, scope == compile -->
        <version.dependency.apache.collections>4.4</version.dependency.apache.collections>
        <version.dependency.browscap>1.4.0</version.dependency.browscap>
        <version.dependency.common.codec>1.15</version.dependency.common.codec>
        <version.dependency.feign>12.3</version.dependency.feign>
        <version.dependency.geoip2>4.0.1</version.dependency.geoip2>
        <version.dependency.jackson>2.15.0</version.dependency.jackson>
        <version.dependency.jakarta>2.3.3</version.dependency.jakarta>
        <version.dependency.jasypt>3.0.5</version.dependency.jasypt>
        <version.dependency.jsonwebtoken>0.9.1</version.dependency.jsonwebtoken>
        <version.dependency.liquibase>4.21.1</version.dependency.liquibase>
        <version.dependency.lombok>1.18.26</version.dependency.lombok>
        <version.dependency.postresql.hibernate.types>2.21.1</version.dependency.postresql.hibernate.types>
        <version.dependency.springframework.boot>2.7.11</version.dependency.springframework.boot>
        <version.dependency.tomcat.embed>9.0.74</version.dependency.tomcat.embed>
        <!-- dependencies, scope == test -->
        <version.dependency.assertj>3.24.2</version.dependency.assertj>
        <version.dependency.jsonpath>2.8.0</version.dependency.jsonpath>
        <version.dependency.junit>5.9.3</version.dependency.junit>
        <version.dependency.testcontainers>1.18.0</version.dependency.testcontainers>
        <!-- plugins -->
        <version.plugin.compiler>3.11.0</version.plugin.compiler>
        <version.plugin.build.helper>3.4.0</version.plugin.build.helper>
        <version.plugin.dependency>3.5.0</version.plugin.dependency>
        <version.plugin.failsafe>3.1.2</version.plugin.failsafe>
        <version.plugin.git.commit>4.9.10</version.plugin.git.commit>
        <version.plugin.gpg>3.0.1</version.plugin.gpg>
        <version.plugin.lombok>1.18.20.0</version.plugin.lombok>
        <version.plugin.nexus>1.6.13</version.plugin.nexus>
        <version.plugin.jacoco>0.8.9</version.plugin.jacoco>
        <version.plugin.javadoc>3.5.0</version.plugin.javadoc>
        <version.plugin.source>3.2.1</version.plugin.source>
        <version.plugin.surefire>3.0.0</version.plugin.surefire>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ========================================================================================== -->
            <!-- dependencies, scope == compile -->
            <!-- ========================================================================================== -->

            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.dependency.springframework.boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot: Secure Sensitive Configurations -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${version.dependency.jasypt}</version>
            </dependency>
            <!-- JWT Security -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${version.dependency.jsonwebtoken}</version>
            </dependency>
            <!-- PostgreSQL -->
            <dependency>
                <groupId>com.vladmihalcea</groupId>
                <artifactId>hibernate-types-52</artifactId>
                <version>${version.dependency.postresql.hibernate.types}</version>
            </dependency>
            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${version.dependency.liquibase}</version>
            </dependency>
            <!-- j8 -> j11 migration, @ObjectMapper related, API, javax.xml.bind module -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${version.dependency.jakarta}</version>
            </dependency>
            <!-- HTTP Client: Feign-->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-okhttp</artifactId>
                <version>${version.dependency.feign}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-jackson</artifactId>
                <version>${version.dependency.feign}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-slf4j</artifactId>
                <version>${version.dependency.feign}</version>
            </dependency>
            <!-- JSONs: Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${version.dependency.jackson}</version>
                <type>pom</type>
            </dependency>
            <!-- Collections: CircularFifoQueue -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${version.dependency.apache.collections}</version>
            </dependency>
            <!-- GeoIP2 -->
            <dependency>
                <groupId>com.maxmind.geoip2</groupId>
                <artifactId>geoip2</artifactId>
                <version>${version.dependency.geoip2}</version>
            </dependency>
            <!-- Browser Capabilities -->
            <dependency>
                <groupId>com.blueconic</groupId>
                <artifactId>browscap-java</artifactId>
                <version>${version.dependency.browscap}</version>
            </dependency>
            <!-- Common Codec -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${version.dependency.common.codec}</version>
            </dependency>
            <!-- Tomcat: Cookie, CacheHttpRequests -->
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${version.dependency.tomcat.embed}</version>
            </dependency>
            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.dependency.lombok}</version>
                <scope>provided</scope>
            </dependency>

            <!-- ========================================================================================== -->
            <!-- dependencies, scope == test -->
            <!-- ========================================================================================== -->

            <!-- Spring Test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${version.dependency.springframework.boot}</version>
                <scope>test</scope>
            </dependency>
            <!-- Testcontainers -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${version.dependency.testcontainers}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${version.dependency.testcontainers}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mongodb</artifactId>
                <version>${version.dependency.testcontainers}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.dependency.testcontainers}</version>
                <scope>test</scope>
            </dependency>
            <!-- JUnit -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.dependency.junit}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- JSON Path -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${version.dependency.jsonpath}</version>
                <scope>test</scope>
            </dependency>
            <!-- Asserts -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.dependency.assertj}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- all modules will have these dependencies -->
    <dependencies>
        <!-- ========================================================================================== -->
        <!-- dependencies, scope == compile -->
        <!-- ========================================================================================== -->

        <!-- HTTP Client: Feign-->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-slf4j</artifactId>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- ========================================================================================== -->
        <!-- dependencies, scope == test -->
        <!-- ========================================================================================== -->

        <!-- Spring Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Testcontainers -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mongodb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JUnit -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JSON Path -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Asserts -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>release-github</id>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/tech1-io/tech1-framework/packages</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <!-- No Longer Supported from 25.01.2024 -->
            <id>release</id>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <!-- Source -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${version.plugin.source}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- JavaDoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.plugin.javadoc}</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <sourcepath>${project.delombok.output}</sourcepath>
                            <quiet>true</quiet>
                            <doclint>none</doclint>
                            <source>${version.java}</source>
                        </configuration>
                    </plugin>
                    <!-- https://stackoverflow.com/questions/11329965/how-to-ignore-the-java-source-directory-during-maven-compilation -->
                    <!-- Lombok -->
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                        <version>${version.plugin.lombok}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>delombok</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <sourceDirectory>src/main/java</sourceDirectory>
                            <addOutputDirectory>false</addOutputDirectory>
                            <outputDirectory>${project.delombok.output}</outputDirectory>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </configuration>
                    </plugin>
                    <!-- GPG -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${version.plugin.gpg}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <keyname>${gpg.keyname}</keyname>
                                    <passphraseServerId>${gpg.passphrase}</passphraseServerId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Nexus -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${version.plugin.nexus}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Spring Boot -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${version.dependency.springframework.boot}</version>
                    <configuration>
                        <executable>true</executable>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- FailSafe: unit vs. integration testcontainers tests  -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.plugin.failsafe}</version>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Tests: integration testcontainers folder -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${version.plugin.build.helper}</version>
                    <executions>
                        <execution>
                            <id>add-integration-test-source</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/test-integration/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Verifier: GIT => `/info` endpoint -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${version.plugin.git.commit}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>compile</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                        <dateFormat>dd.MM.yyyy HH:mm:ss</dateFormat>
                        <dateFormatTimeZone>EET</dateFormatTimeZone>
                        <offline>true</offline>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Source -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.plugin.source}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- JavaDoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.plugin.javadoc}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourcepath>${project.delombok.output}</sourcepath>
                    <quiet>true</quiet>
                    <doclint>none</doclint>
                    <source>${version.java}</source>
                </configuration>
            </plugin>
            <!-- https://stackoverflow.com/questions/11329965/how-to-ignore-the-java-source-directory-during-maven-compilation -->
            <!-- Lombok -->
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>${version.plugin.lombok}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>src/main/java</sourceDirectory>
                    <addOutputDirectory>false</addOutputDirectory>
                    <outputDirectory>${project.delombok.output}</outputDirectory>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.plugin.compiler}</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <!-- Copy Dependency: Lombok (Sonar Purposes) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${version.plugin.dependency}</version>
                <executions>
                    <execution>
                        <id>copy-lombok</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${version.dependency.lombok}</version>
                                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.plugin.jacoco}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.plugin.surefire}</version>
                <configuration>
                    <runOrder>random</runOrder>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
